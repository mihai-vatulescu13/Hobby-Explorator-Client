{"version":3,"sources":["components/images/user-logo.png","components/images/insta-logo.png","components/images/mark-github-512.png","components/images/linkedin_logo.png","components/images/logo.png","components/images/game-image.jpg","components/images/hobby-img.png","components/images/photo-hobby.jpg","components/images/tennis-hobby.jpg","components/images/guitar-hobby.jpg","components/images/user-picture1.png","components/Hobbies icons/chess.png","components/Hobbies icons/football.png","components/Hobbies icons/books.png","components/Hobbies icons/listen-music.png","components/Hobbies icons/paint.png","components/Hobbies icons/running.png","components/Hobbies icons/bike.png","components/Hobbies icons/singing.png","components/Hobbies icons/gaming.png","components/Hobbies icons/shopping.png","components/Hobbies icons/travel.png","components/Hobbies icons/photo.png","components/Hobbies icons/guitar.png","components/Hobbies icons/theathre.png","components/Hobbies icons/videos.png","components/Hobbies icons/meme.png","components/images/register-logo.png","components/Edit Profile/user-default-pic.png","serviceWorker.js","components/Footer/Footer.js","components/Login/Login.js","firebase.js","components/User Card/UserCard.js","components/Searchbar/Searchbar.js","components/Matches list/MatchesList.js","components/Hobbies Array/hobbies.js","components/context/context.js","components/Hobby Card/HobbyCard.js","components/Hobbies Array/hobbiesIconsArr.js","components/Hobbies List/HobbiesList.js","components/file upload/FileUpload.js","components/Register/Register.js","components/Edit Profile/EditProfile.js","Home.js","RoutingPage.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Footer","className","src","linkedin_logo","alt","href","insta_logo","github_logo","Login","props","changeEmail","event","setState","email","target","value","handleEmail","handlePassword","password","submitLogin","fetch","method","headers","body","JSON","stringify","state","then","resp","json","data","user_id","passUser","routeChange","correctCredentials","catch","err","console","log","userLogo","Form","Group","controlId","Label","Control","type","placeholder","onChange","this","Text","Button","onClick","style","textAlign","color","variant","React","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","UserCard","imageSource","userPicture","storageRef","storage","ref","child","imageprofile","getDownloadURL","url","username","hobby2","hobby1","hobby3","city","Searchbar","onUserNameChange","searchField","inline","FormControl","searchUser","MatchesList","findMatches","filteredUsers","final","userArrHobby","currentUserHobbies","undefined","i","length","j","includes","push","renderUsers","usersFiltered","response","filteredCurrent","exceptCurrent","finalList","matchList","getCurrentUserHobbies","array","userId","arr","filtered","render","matchArr","filter","user","toLowerCase","map","item","key","currentPath","fontSize","margin","marginInline","changeRoute","usersHobbies","hobbiesArray","id","hobbyName","selected","DataContext","createContext","DataProvider","getItem","hobbiesList","find","addHobby","selectedItem","tempArr","selectedHobbies","removeHobby","temp","Provider","selectBtn","updateStatus","children","userNumCompatibilities","DataConsumer","Consumer","HobbyCard","iconName","itemId","Card","Title","iconsArr","chess","football","books","listenmusic","paint","running","bike","singing","gaming","shopping","travel","photo","guitar","theathre","videos","meme","HobbiesList","sendHobbiesData","hobbiesArr","checkRedundancy","currentHobbies","rendundantHobbies","hobbiesListArr","hobbies","optionsIcons","currentPage","hobbyNames","checkRedundancyHobbies","sentData","marginTop","cursor","res","currentHobbiesLabel","hobby","FileUpload","handleFile","file","files","handleUpload","uploadTask","name","put","on","TaskEvent","STATE_CHANGED","snapshot","downloadURL","validateUserData","userData","userName","correctInput","uploadUserData","isSubmited","uploadedFileName","uploadedFilePath","isPasswordComplex","onChangeReg","Register","path","regPath","handleName","handleCity","registerLogo","EditProfile","setProfilePicture","passUserData","deleteUserData","givenUserId","givenUserEmail","onChangeNewName","newUserName","onChangeNewCity","newCity","changeUserName","newName","changeUserCity","userDefaultPic","index","userdata","App","pageLogo","Navbar","Nav","Link","Carousel","Item","GameImage","Caption","photoHobby","tennishobby","guitarHobby","HobbyImg","RoutingPage","route","joined","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.3ad96fb6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user-logo.08daf816.png\";","module.exports = __webpack_public_path__ + \"static/media/insta-logo.498a8a26.png\";","module.exports = __webpack_public_path__ + \"static/media/mark-github-512.969d06ca.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedin_logo.0353eb24.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.19ab5df9.png\";","module.exports = __webpack_public_path__ + \"static/media/game-image.8be3002a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hobby-img.863503e3.png\";","module.exports = __webpack_public_path__ + \"static/media/photo-hobby.31cf6b66.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tennis-hobby.bb1eb7f6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/guitar-hobby.17cfac7e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/user-picture1.b95a9714.png\";","module.exports = __webpack_public_path__ + \"static/media/chess.53e8e57a.png\";","module.exports = __webpack_public_path__ + \"static/media/football.a6381de5.png\";","module.exports = __webpack_public_path__ + \"static/media/books.841c4006.png\";","module.exports = __webpack_public_path__ + \"static/media/listen-music.de562f5c.png\";","module.exports = __webpack_public_path__ + \"static/media/paint.7038a3c1.png\";","module.exports = __webpack_public_path__ + \"static/media/running.01c5b56d.png\";","module.exports = __webpack_public_path__ + \"static/media/bike.df01264d.png\";","module.exports = __webpack_public_path__ + \"static/media/singing.bd3f94a2.png\";","module.exports = __webpack_public_path__ + \"static/media/gaming.d1eb94e4.png\";","module.exports = __webpack_public_path__ + \"static/media/shopping.828f1e0d.png\";","module.exports = __webpack_public_path__ + \"static/media/travel.ce1ed871.png\";","module.exports = __webpack_public_path__ + \"static/media/photo.146d04a3.png\";","module.exports = __webpack_public_path__ + \"static/media/guitar.374a5c1d.png\";","module.exports = __webpack_public_path__ + \"static/media/theathre.e7a85d51.png\";","module.exports = __webpack_public_path__ + \"static/media/videos.17227c7d.png\";","module.exports = __webpack_public_path__ + \"static/media/meme.0b084e3b.png\";","module.exports = __webpack_public_path__ + \"static/media/register-logo.25582fde.png\";","module.exports = __webpack_public_path__ + \"static/media/user-default-pic.72d63b82.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\n// import logos for footer contact section:\r\nimport insta_logo from '../images/insta-logo.png'\r\nimport github_logo from '../images/mark-github-512.png'\r\nimport linkedin_logo from '../images/linkedin_logo.png'\r\nimport './footer.css'\r\n\r\nconst Footer = () =>{\r\n return(\r\n  <div className='footer-container'> \r\n   {/*author details section: */}\r\n   <div className='author-details'>\r\n    <div className='auth-data'>\r\n      <p className='name'>\r\n      {/*left side:white color,right side:radiant gradient colors */}\r\n        Author:<span className='color-text'> Mihai Vatulescu</span>\r\n      </p>\r\n      <p className='date-created'>\r\n        Date:<span className='color-text'> 14.01.2021</span>   \r\n      </p>\r\n      <p className='contact-me'>\r\n        Contact me: vatulescu.mihai@gmail.com or\r\n      </p>\r\n    </div> \r\n   </div>\r\n   {/* contact details section: */}\r\n   <div className='contact-details'>\r\n    <ul>\r\n\r\n     <li className='contact-item'>\r\n      <img \r\n        className='contact-logo'\r\n        src={linkedin_logo}\r\n        alt=\"facebook logo\"\r\n      />\r\n      <a href='https://www.linkedin.com/in/mihai-vatulescu-2659291b2/' \r\n         className='contact-platform-name'>\r\n       linkedin\r\n      </a>\r\n     </li>\r\n\r\n     <li className='contact-item'>\r\n      <img \r\n        className='contact-logo'\r\n        src={insta_logo}\r\n        alt=\"instagram logo\"\r\n      /> \r\n      <a href='https://www.instagram.com/mihai_vatulescu/' \r\n         className='contact-platform-name'>\r\n       Instagram\r\n      </a>\r\n     </li>\r\n\r\n     <li className='contact-item'>\r\n      <img \r\n        className='contact-logo'\r\n        src={github_logo}\r\n        alt=\"linkedin logo\"\r\n      /> \r\n      <a href='https://github.com/mihai-vatulescu13' \r\n         className='contact-platform-name'>\r\n       github\r\n      </a>\r\n     </li>\r\n      \r\n    </ul>\r\n   </div>\r\n  </div>   \r\n )   \r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './login.css'\r\nimport userLogo from '../images/user-logo.png'\r\n// import Form and Button COMPONENTS from react Bootstrap:\r\nimport {Form, Button} from 'react-bootstrap'\r\n// import STYLESHEET file from react Bootstrap:\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Footer from '../Footer/Footer.js'\r\n\r\n\r\nclass Login extends React.Component{\r\n\r\n  constructor(props){\r\n   super(props);\r\n   this.state={\r\n    email: '',\r\n    password: '',\r\n    correctCredentials: true\r\n   }\r\n  } \r\n  \r\n  //delete later on\r\n  changeEmail = (event) =>{\r\n   this.setState({email: event.target.value}) \r\n  }\r\n\r\n  handleEmail = (event) =>{\r\n   this.setState({email: event.target.value});\r\n  }\r\n\r\n  handlePassword = (event) =>{\r\n   this.setState({password: event.target.value});\r\n  }\r\n\r\n\r\n  submitLogin = () =>{\r\n   fetch('https://fierce-shore-66137.herokuapp.com/login',{\r\n    method: 'post',\r\n    headers:{'Content-type':'application/json'},\r\n     body: JSON.stringify({\r\n      email: this.state.email,\r\n      password: this.state.password\r\n     }) \r\n    })\r\n    .then(resp => resp.json())//return the response as json\r\n    .then(data =>{\r\n     if(data.user_id){\r\n      this.props.passUser(data)\r\n      this.props.routeChange('home')\r\n     }else{\r\n      this.setState({correctCredentials: false}); \r\n     }\r\n      \r\n    })//then use given data\r\n    .catch(err => console.log(err)) \r\n  }\r\n\r\n\r\n  render(){\r\n   return( \r\n    //main container:   \r\n    <div className='main-container'>\r\n     <div className='login-container'>\r\n     {/*Title + logo section:  */}\r\n     <div className='title-container'>\r\n      {/*Top container includes logo + title section: */}\r\n      <div className='top-container'>\r\n       <div className='logo-container'>\r\n        <img \r\n          className='user-logo'\r\n          src={userLogo}\r\n          alt=\"user logo\"\r\n        />\r\n       </div>\r\n       <div className='title-page'>\r\n        {/*Divide the title in two different colors:*/}\r\n        <p className='page-title'>\r\n         <span className='first-half-title'>\r\n          Sign\r\n         </span>\r\n         <span className='second-half-title'>\r\n          In\r\n         </span>\r\n        </p>   \r\n       </div>   \r\n      </div>\r\n     </div> \r\n\r\n      {/* message section */}\r\n      <div className='follow-message-section'>\r\n       <p className='follow-message'>\r\n        Insert your credentials into follow fields:\r\n       </p>   \r\n      </div>\r\n     \r\n      {/* for signin form section(labels+input fields) use REact bootstrap or materialUi */}\r\n      {/*Credentials section container:  */}\r\n      <div className='credentials-section-container'>  \r\n       <Form className ='form-container'>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n         <Form.Label>\r\n          Email address\r\n         </Form.Label>\r\n         {/* email input textfield: */}\r\n         <Form.Control \r\n          type=\"email\"\r\n          placeholder=\"Enter email\"\r\n          onChange={this.handleEmail} \r\n          />\r\n         <Form.Text className=\"text-muted\">\r\n          We'll never share your email with anyone else.\r\n         </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n         <Form.Label>\r\n          Password\r\n         </Form.Label>\r\n         {/*password input textfield: */} \r\n         <Form.Control \r\n          type=\"password\" \r\n          placeholder=\"Password\" \r\n          onChange={this.handlePassword}\r\n         />\r\n        </Form.Group>\r\n     \r\n        <div className='btn-container'>\r\n          {/* if the problem remain use a classic button <button/> */}\r\n         <Button \r\n          //variant=\"primary\" \r\n          //type=\"submit\"\r\n          className='btn-style'\r\n          onClick={() => {\r\n           this.submitLogin()\r\n           }\r\n          }\r\n         >\r\n         Login\r\n         </Button>  \r\n        </div>\r\n       </Form>\r\n   \r\n      </div>\r\n      {\r\n         this.state.correctCredentials ? \r\n         <p></p> :\r\n         <p style={\r\n          {\r\n           textAlign:'center',\r\n           color:'#FE6B8B'\r\n          }\r\n         }>\r\n          Incorrect password or email!\r\n         </p>\r\n      }\r\n\r\n      {/*This section is for case when the user dosen't have an account yet, the register button will sent them to register page. */}\r\n      <div className='register-nav-section'>\r\n       <div className='register-nav'>\r\n        <div className='no-account-message'>\r\n         <p>\r\n          You don't have an account yet? Create one now!   \r\n         </p>\r\n        </div>\r\n        <div className='register-btn'>\r\n          <Button \r\n            variant=\"primary\" \r\n            type=\"submit\"\r\n            className='btn-style'\r\n            onClick={() => this.props.routeChange('register')}\r\n          >\r\n           Register\r\n          </Button>\r\n        </div>\r\n        \r\n       </div>\r\n      </div>\r\n\r\n     </div>\r\n     {/* additional message section: */}\r\n     {/* <div className='other-msg'>\r\n         \r\n     </div> */}\r\n     <Footer/>\r\n    </div>\r\n   )  \r\n  }\r\n}\r\n\r\nexport default Login;\r\n","//firebase configuration file:\r\nimport firebase from 'firebase'\r\n\r\n//config object:\r\nlet config ={\r\n apiKey: \"AIzaSyDTg94JGEQKCJURJd84PiAoT6XvElXS5LI\",\r\n authDomain: \"hobbyexploratorphotos.firebaseapp.com\",\r\n databaseURL: \"https://hobbyexploratorphotos.firebaseio.com\",\r\n projectId: \"hobbyexploratorphotos\",\r\n storageBucket: \"hobbyexploratorphotos.appspot.com\",\r\n messagingSenderId: \"1069276141665\",\r\n appId: \"1:1069276141665:web:249a2ec9b4bea1ea2a3220\",\r\n measurementId: \"G-WMXZ8FQN1J\"\r\n\r\n}\r\n\r\n//initialize firebase app:\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","import React from 'react'\r\nimport './userCard.css'\r\nimport firebase from '../../firebase.js'\r\n//use later on as default picture if the user was not choose a profile picture\r\nimport userPicture from '../images/user-picture1.png'\r\n\r\nclass UserCard extends React.Component{\r\n constructor(props){\r\n  super(props);\r\n  this.state = {\r\n   imageSource: userPicture //default user picture \r\n  }\r\n } \r\n\r\n componentDidMount(){\r\n  let storageRef = firebase.storage().ref()\r\n  let spaceRef = storageRef.child('images/'+this.props.imageprofile)\r\n  storageRef\r\n   .child('images/'+this.props.imageprofile)\r\n   .getDownloadURL()\r\n   .then(url =>{\r\n    console.log('image url:\\n',url)\r\n    this.setState({imageSource: url}) \r\n   })\r\n\r\n }\r\n\r\n render(){\r\n  const {username,hobby1,hobby2,hobby3,city,imageprofile,email} = this.props;  \r\n  return(\r\n   <div className='user-card-container'>\r\n    {/* profile picture section for the user card */}\r\n    <div className='user-picture-section center-elem'>\r\n     <img\r\n      //use require to import image/file automatically from a local folder \r\n      src={this.state.imageSource} \r\n      alt='user-profile-img'\r\n      className='profile-picture'\r\n     />\r\n    </div>\r\n    \r\n    {/* user data section:->contain username(fname,lname),hobbies,city and chat button (maybe) */}\r\n    <div className='user-data-section center-elem'>\r\n     <div className='fname-lname'>\r\n      <h4 className='username'>{username}</h4>\r\n      {/* <h4 className='lname'>Mitica</h4>  */}\r\n     </div>\r\n\r\n     <div className='hobbies-city'>\r\n      <div className='hobbies-description'>\r\n        {/* this part will show for each user first 3 hobbies(from his hobbies array->hobby:0,1,2->index) */}\r\n        <p className='user-hobby-text'>\r\n         email: {email}\r\n        </p>\r\n        <p className='user-hobby-text'>\r\n         {hobby2}\r\n        </p>\r\n        <p className='user-hobby-text'>\r\n         {hobby3}\r\n        </p>\r\n      </div>\r\n      <div className='city-container'>\r\n       <h5 className='city-text'>\r\n        city: {city}\r\n       </h5>\r\n       <p className='user-rating'>\r\n        {/* automatically counter(passed from the server) later on show user popularity*/}\r\n        {/* people compatibility: 25  */}\r\n       </p>\r\n      </div>\r\n     </div>\r\n\r\n    </div>\r\n\r\n   </div>   \r\n  )\r\n }   \r\n}\r\n\r\nexport default UserCard;","import React from 'react'\r\nimport './searchBar.css'\r\nimport {Form, FormControl} from 'react-bootstrap'\r\n\r\nclass Searchbar extends React.Component{\r\n\r\n constructor(props){\r\n  super(props)\r\n  this.state={\r\n   searchField: '' \r\n  }\r\n }\r\n\r\n onUserNameChange = (event) =>{\r\n  this.setState({searchField: event.target.value})\r\n }\r\n\r\n  render(){\r\n    return(\r\n      <div className='search-bar-component center-elem'>\r\n       <div className='search-section'>\r\n        <Form inline className='searchbar-form'>\r\n         <FormControl \r\n          type=\"text\" \r\n          placeholder=\"Search users\" \r\n          className=\"mr-sm-2 search-field\" \r\n          // onChange={(e) => this.onUserNameChange(e)}\r\n          onChange={this.props.searchUser}\r\n         />\r\n         \r\n        </Form>\r\n       </div>   \r\n      </div>   \r\n    ) \r\n  }  \r\n}\r\n\r\nexport default Searchbar;\r\n","import React from 'react'\r\nimport './matchesList.css'\r\nimport UserCard from '../User Card/UserCard.js'\r\nimport Searchbar from '../Searchbar/Searchbar.js'\r\n// import match_list from '../fake users/users.js'\r\nimport Home from '../../Home.js'\r\nimport {Button} from 'react-bootstrap'\r\n\r\n\r\nclass MatchesList extends React.Component{\r\n  constructor(props){\r\n   super(props)\r\n   this.state={\r\n    //array of users matches: \r\n    matchList: [],\r\n    currentPath: 'matches-list',\r\n    //list of hobbies for current connected user\r\n    currentUserHobbies:{\r\n      userArrHobby:[] //this array is empty before componentDidMount() method call\r\n    },\r\n    searchField: ''\r\n   }\r\n  }\r\n  \r\n\r\n  componentDidMount(){\r\n    fetch('https://fierce-shore-66137.herokuapp.com/getUsersData')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      //grab hobbies for the current user:\r\n      this.getCurrentUserHobbies(data.usersHobbies)\r\n\r\n      //array of users after exception of current logged user:\r\n      let filtered = this.exceptCurrent(data.usersHobbies);\r\n      this.renderUsers(filtered)\r\n    }) \r\n  }\r\n\r\n  \r\n  findMatches = (filteredUsers) =>{\r\n   //here we store all \"compatible\" users by hobbies:\r\n   let final = []\r\n   const {userArrHobby} = this.state.currentUserHobbies;\r\n   \r\n   if(userArrHobby !== undefined){\r\n    //O(n^2) time complexity for now (improve performance later on)\r\n    for(let i=0;i<filteredUsers.length;i++){\r\n     for(let j=0;j<filteredUsers[i].userArrHobby.length;j++){\r\n      if(userArrHobby.includes(filteredUsers[i].userArrHobby[j])){\r\n       final.push(filteredUsers[i].user_id);\r\n      }\r\n     } \r\n    }\r\n   }else{\r\n    //in case that for connected user don't exist hobbies(his list is empty) return an empty hobbies list:\r\n    return []; \r\n   }\r\n\r\n   //return an array id ids(integers)\r\n   return final;\r\n  }\r\n\r\n\r\n  //call later on:(will update the state:-> matchList with returned/given list)\r\n  renderUsers = (filteredUsers) =>{\r\n   let usersFiltered = this.findMatches(filteredUsers);\r\n   //call a fetch form server to grab all users:\r\n   fetch('https://fierce-shore-66137.herokuapp.com/getUsers')\r\n   .then(response => response.json())\r\n   .then(data =>{\r\n    //keep all users except the currently connected: \r\n    let filteredCurrent = this.exceptCurrent(data)\r\n    //in this list we store the final compatible users:\r\n    let finalList = [];\r\n\r\n    //filteredCurrent[i].user_id -> access user id field:\r\n    for(let i=0;i<filteredCurrent.length;i++){\r\n     if(usersFiltered.includes(filteredCurrent[i].user_id)){\r\n      finalList.push(filteredCurrent[i]); \r\n     } \r\n    }\r\n  \r\n    //\"final\" point:\r\n    this.setState({matchList: finalList})\r\n   })\r\n  }\r\n\r\n\r\n  //this method extract hobbies for the current user:\r\n  getCurrentUserHobbies = (array) =>{\r\n   for(let i=0;i<array.length;i++){    \r\n    if(array[i].user_id === this.props.userId){\r\n     this.setState({currentUserHobbies: array[i]});\r\n     break;\r\n    }else{\r\n     console.log('something wrong has occurred, the user does not have any hobby yet')\r\n    } \r\n   }\r\n  }\r\n\r\n\r\n  //this method except the current logged user from the users list:\r\n  exceptCurrent = (arr) =>{\r\n    let filtered = [];\r\n    for(let i=0;i<arr.length;i++){\r\n      if(arr[i].user_id !== this.props.userId){\r\n        filtered.push(arr[i]); \r\n      } \r\n    }\r\n    return filtered;\r\n  }\r\n\r\n \r\n  //a method that search an user by a criteria:\r\n  searchUser = (event) =>{\r\n   this.setState({searchField: event.target.value})\r\n  }\r\n\r\n\r\n  render = () =>{\r\n\r\n   // filter here the array by users names:\r\n   const filteredByName = this.state.matchList.filter(user =>{\r\n    return user.username.toLowerCase().includes(this.state.searchField.toLowerCase()) \r\n   })  \r\n\r\n   const matchArr = filteredByName.map(item =>{\r\n    return <UserCard\r\n            key={item.user_id}\r\n            username = {item.username}\r\n            email = {item.email}\r\n            city = {item.city}\r\n            imageprofile = {item.imageprofile} \r\n           /> \r\n   })\r\n \r\n   return(\r\n    <div>\r\n      {\r\n       this.state.currentPath === \"matches-list\" ? \r\n       (<div className='match-list-main-container'>\r\n        <div className='matches-container'>\r\n          <div className='matches-list-title center-elem'>\r\n            <h2>\r\n            See your hobby compatibilities below!\r\n            </h2> \r\n          </div>\r\n\r\n          <div className='search-users-section'>\r\n           {/*add here a search component  */}\r\n           <Searchbar \r\n            searchUser = {this.searchUser}\r\n           />\r\n          </div>\r\n\r\n          <div>\r\n           <p style={{fontSize:'20px', margin:'10px'}}>\r\n            You have \r\n            <span style={{color:'#FE6B8B',marginInline:'5px'}}>\r\n             {this.state.matchList.length}\r\n            </span>\r\n            compatibilities\r\n           </p> \r\n          </div>\r\n          \r\n          \r\n          <div className='matches-list-section center-elem'>\r\n            {/* matches lsit properly: */}\r\n            <div className='matches-list'>\r\n            {\r\n             matchArr\r\n            }\r\n            </div> \r\n          </div>\r\n        {/* Add a button here later on */}\r\n\r\n\r\n        <div className='center-elem'>\r\n          <Button\r\n           className='back-home-btn btn-style'\r\n           onClick={() => this.props.changeRoute('home')}\r\n          >\r\n            Back to home\r\n          </Button> \r\n        </div>\r\n\r\n        </div>\r\n       </div>) : (<Home/>)\r\n\r\n      } \r\n    </div>   \r\n   )   \r\n  }\r\n}\r\n\r\nexport default MatchesList;","\r\n//hobbies list will represent an array of objects:\r\n// first start with 15 hobbies:\r\n//export this array to use later in the app:\r\nlet hobbiesArray = [\r\n  {\r\n   id: 1,\r\n   hobbyName: 'play chess',\r\n   selected: false\r\n  },\r\n  {\r\n   id: 2,\r\n   hobbyName: 'play football',\r\n   selected: false\r\n  },\r\n  {\r\n   id: 3,\r\n   hobbyName: 'read books',\r\n   selected: false\r\n  },\r\n  {\r\n   id: 4,\r\n   hobbyName: 'listen music',\r\n   selected: false\r\n  },\r\n  {\r\n   id: 5,\r\n   hobbyName: 'draw',\r\n   selected: false\r\n  },\r\n  {\r\n   id: 6,\r\n   hobbyName: 'running/jogging',\r\n   selected: false\r\n  },\r\n  {\r\n   id: 7,\r\n   hobbyName: 'biking/motocycle',\r\n   selected: false\r\n  },\r\n  {\r\n   id: 8,\r\n   hobbyName: 'singing',\r\n   selected: false\r\n  },\r\n  {\r\n   id: 9,\r\n   hobbyName: 'play video games',\r\n   selected: false\r\n  },\r\n  {\r\n   id: 10,\r\n   hobbyName: 'shopping',\r\n   selected: false\r\n  },\r\n  {\r\n   id: 11,\r\n   hobbyName: 'travelling',\r\n   selected: false\r\n  },\r\n  {\r\n   id: 12,\r\n   hobbyName: 'photography',\r\n   selected: false\r\n  },\r\n  {\r\n   id: 13,\r\n   hobbyName: 'guitar singing',\r\n   selected: false\r\n  },\r\n  {\r\n   id: 14,\r\n   hobbyName: 'theathre/cinema',\r\n   selected: false\r\n  },\r\n  {\r\n   id: 15,\r\n   hobbyName: 'watch moovies/serials',\r\n   selected: false\r\n  },\r\n  {\r\n   id: 16,\r\n   hobbyName: 'memes passionate',\r\n   selected: false \r\n  }  \r\n\r\n]\r\n\r\nexport default hobbiesArray;\r\n","import React from 'react'\r\nimport hobbiesArray from '../Hobbies Array/hobbies.js'\r\n//create an data flow between components using React Context-Provider-Consumer:\r\n//Context contain Provider(source) and Consumer(the final destination)\r\nconst DataContext = React.createContext(); \r\n\r\n//create provider source component(this will be a class):\r\nclass DataProvider extends React.Component{\r\n\r\n  constructor(props){\r\n   super(props);\r\n   this.state = {\r\n    hobbiesList : hobbiesArray, \r\n    selectedHobbies: [],\r\n    userNumCompatibilities: 0\r\n\r\n   } \r\n  }\r\n\r\n\r\n  getItem = (id) =>{\r\n   const hobby = this.state.hobbiesList.find(item =>{\r\n    return item.id === id; \r\n   })\r\n   return hobby;\r\n  }  \r\n\r\n\r\n  //a method that add every eslected hobby into an array of hobbies:\r\n  //every hobby will be added by a specific and unique id:\r\n  addHobby = (id) =>{\r\n   const selectedItem = this.getItem(id);\r\n   //update item status:\r\n   selectedItem.selected = true;\r\n   let tempArr = this.state.selectedHobbies;\r\n   tempArr.push(selectedItem);\r\n   //update the state:\r\n   this.setState(() => {return {selectedHobbies: tempArr}})\r\n  }\r\n  \r\n   \r\n  //implement remove item function using .splice() method:\r\n  removeHobby = (id) =>{\r\n   let temp = this.state.selectedHobbies;\r\n\r\n   temp = temp.filter(selectedItem =>{\r\n    return selectedItem.id !== id;\r\n   }) \r\n\r\n   const selectedItem = this.getItem(id);\r\n   //update item status:\r\n   selectedItem.selected = false;\r\n   //update the state:\r\n   this.setState({selectedHobbies: temp})\r\n   \r\n  }\r\n\r\n\r\n\r\n  render = () =>{\r\n \r\n   console.log('hobbies array:\\n',this.state.selectedHobbies)\r\n\r\n   return(\r\n    <DataContext.Provider\r\n     //must be default keyword(\"value\"): \r\n     value = {{\r\n      selectBtn: this.selectBtn,\r\n      getItem: this.getItem,\r\n      addHobby: this.addHobby,\r\n      selectedHobbies: this.state.selectedHobbies,\r\n      updateStatus: this.updateStatus,\r\n      removeHobby: this.removeHobby\r\n      \r\n     }}\r\n    >\r\n     {/*pass data to children components: */}\r\n     {this.props.children}   \r\n    </DataContext.Provider>   \r\n   )   \r\n  }  \r\n}\r\n\r\n//define the consumer component for child/s:\r\nconst DataConsumer = DataContext.Consumer;\r\n\r\n//export them:\r\nexport {DataProvider, DataConsumer};\r\n","import React from 'react'\r\nimport {Card, Button} from 'react-bootstrap'\r\n// import STYLESHEET file from react Bootstrap:\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './hobbyCard.css'\r\nimport {DataConsumer} from '../context/context.js'\r\n\r\n\r\n// hobby card structure/design:\r\nclass HobbyCard extends React.Component{\r\n\r\n render = () =>{\r\n  const {hobbyName, iconName, itemId} = this.props;\r\n\r\n  return( \r\n  <DataConsumer>\r\n   {\r\n     (data) =>{\r\n      return(\r\n       //main component container:  \r\n       <div className='main-card-container center-elem'>\r\n        {/*this section contain title and button of the card:*/}\r\n        <div className='card-container'>\r\n        {/*option logo section */}\r\n        <div className='card-icon-container center-elem'>\r\n          <img \r\n            src={iconName}\r\n            alt='option-icon'\r\n            className='card-icon'\r\n          />\r\n        </div>\r\n        {/*in this section we keep title and button */}\r\n        <div className='card-title-logo'>\r\n          {/*add a logo here later on */}\r\n          <div className='center-elem card-title'>\r\n            <Card.Title \r\n            className='card-hobby-title'\r\n            >\r\n            {hobbyName} \r\n            </Card.Title>       \r\n          </div>\r\n          <div className='add-remove'>\r\n            {/* selection button: */}\r\n            <div className='center-elem card-btn'>\r\n              <Button \r\n                variant=\"primary\"\r\n                className='select-hobby-btn'\r\n                onClick={() =>{\r\n                return data.addHobby(itemId);\r\n                }}\r\n              >\r\n                {\r\n                data.getItem(itemId).selected === true ? 'Selected' : 'Select' \r\n                }\r\n              </Button>  \r\n            </div>\r\n            <div className='center-elem card-btn'>\r\n              {\r\n                data.getItem(itemId).selected ? \r\n                (\r\n                  <Button \r\n                  variant=\"primary\"\r\n                  className='select-hobby-btn'\r\n                  onClick={() =>{\r\n                  return data.removeHobby(itemId);\r\n                  }}\r\n                 >\r\n                  Remove \r\n                 </Button>  \r\n                ) : \r\n                //render an empty component\r\n                (<div> </div>) \r\n              } \r\n            </div>\r\n          </div>\r\n        </div>   \r\n      </div>\r\n\r\n      </div> \r\n     )\r\n    }\r\n   } \r\n  </DataConsumer>      \r\n );   \r\n}\r\n}\r\n\r\nexport default HobbyCard;","//this is a special file where are stored every hobby oprion icon for register page->hobbies list\r\n\r\nimport chess from '../Hobbies icons/chess.png'\r\nimport football from '../Hobbies icons/football.png'\r\nimport books from '../Hobbies icons/books.png'\r\nimport listenmusic from '../Hobbies icons/listen-music.png'\r\nimport paint from '../Hobbies icons/paint.png'\r\nimport running from '../Hobbies icons/running.png'\r\nimport bike from '../Hobbies icons/bike.png'\r\nimport singing from '../Hobbies icons/singing.png'\r\nimport gaming from '../Hobbies icons/gaming.png'\r\nimport shopping from '../Hobbies icons/shopping.png'\r\nimport travel from '../Hobbies icons/travel.png'\r\nimport photo from '../Hobbies icons/photo.png'\r\nimport guitar from '../Hobbies icons/guitar.png'\r\nimport theathre from '../Hobbies icons/theathre.png'\r\nimport videos from '../Hobbies icons/videos.png'\r\nimport meme from '../Hobbies icons/meme.png'\r\n\r\nlet iconsArr = [chess,football,books,listenmusic,paint,running,bike,singing,\r\ngaming,shopping,travel,photo,guitar,theathre,videos,meme\r\n];\r\n\r\nexport default iconsArr;","import React from 'react'\r\nimport HobbyCard from '../Hobby Card/HobbyCard.js'\r\nimport hobbiesArray from '../Hobbies Array/hobbies.js'\r\nimport './hobbiesList.css'\r\nimport { Button } from 'react-bootstrap'\r\nimport optionsIcons from '../Hobbies Array/hobbiesIconsArr.js'\r\nimport {DataConsumer} from '../context/context.js'\r\nimport Home from '../../Home.js'\r\n\r\n\r\nclass HobbiesList extends React.Component{\r\n  constructor(props){\r\n   super(props)\r\n   this.state={\r\n    hobbies: hobbiesArray,\r\n    currentPage: 'hobbies-list',\r\n    sentData: false,\r\n    currentHobbies: [],\r\n    rendundantHobbies: false\r\n   }\r\n  }\r\n\r\n\r\n  componentDidMount(){\r\n   fetch('https://fierce-shore-66137.herokuapp.com/getHobbies',{\r\n    method:'post',\r\n    headers:{'Content-type':'application/json'},\r\n    body: JSON.stringify({\r\n     user_id: this.props.userId \r\n    }) \r\n   })\r\n   .then(res => res.json())\r\n   .then(data =>{\r\n    //define an array of strings based on hobbies names: \r\n    let currentHobbiesLabel = data.map(item =>{\r\n      return item.hobby;\r\n    })\r\n    this.setState({currentHobbies: currentHobbiesLabel})\r\n   })\r\n   .catch(err => console.log(err)) \r\n  }\r\n\r\n\r\n  sendHobbiesData = (hobbiesArr) =>{\r\n   //hobbiesArr -> array data structure\r\n   fetch('https://fierce-shore-66137.herokuapp.com/addHobbies',{\r\n    method:'post',\r\n    headers:{'Content-type':'application/json'},\r\n    body: JSON.stringify({\r\n     selectedHobbies: hobbiesArr,\r\n     user_id: this.props.userId \r\n    }) \r\n   })\r\n   .then(response => response.json())\r\n   .then((data) => console.log(data))\r\n\r\n  }\r\n\r\n  \r\n  //first solution-> using .includes() method inside a for loop => O(n) time complexity:\r\n  checkRedundancy = (selectedHobbies) =>{\r\n   for(let i=0;i<selectedHobbies.length;i++){\r\n    if(this.state.currentHobbies.includes(selectedHobbies[i])){\r\n     this.setState({rendundantHobbies: true}); \r\n     return true; //stop the function \r\n    } \r\n   }\r\n   this.setState({rendundantHobbies: false});\r\n   return false;\r\n  }\r\n\r\n  \r\n\r\n  //this method return true if find an redundant hobby in user hobbies array:\r\n  //(an hobby has choosen 2 or more times)\r\n  //optimal solution -> O(n) time complexity:\r\n  checkRedundancyHobbies(selectedHobbies){\r\n   let currentHobbies = [...this.state.currentHobbies]; \r\n   //define an hashtable that represent current hobbies by the user:\r\n   let map = {};\r\n   for(let i=0;i<currentHobbies.length;i++){\r\n    map[currentHobbies[i]] = currentHobbies[i]; \r\n   }\r\n   \r\n   //loop over selected hobbies:\r\n   for(let i=0;i<selectedHobbies.length;i++){\r\n    //check if already exist in hashmap:  \r\n    if(selectedHobbies[i] in map){\r\n     this.setState({rendundantHobbies: true}); \r\n     return true; //stop the function\r\n    } \r\n   }\r\n   this.setState({rendundantHobbies: false});\r\n   return false;\r\n  }\r\n\r\n\r\n\r\n  //render -> component method\r\n  render = () =>{\r\n   console.log(this.state.rendundantHobbies)\r\n\r\n   //\"map\" every hobby option button: \r\n   let hobbiesListArr = this.state.hobbies.map(item =>{\r\n     return (\r\n      <HobbyCard \r\n       key={item.id}\r\n       hobbyName = {item.hobbyName}\r\n       iconName = {optionsIcons[item.id-1]}\r\n       selectedItem = {item.selected}\r\n       itemId = {item.id}\r\n      />\r\n\r\n     ) \r\n   })\r\n   \r\n\r\n   return(\r\n    this.state.currentPage === 'hobbies-list' ?\r\n    (\r\n     <div className='hobbies-list-container'>\r\n      <div className='hobbies-section-title center-elem'>\r\n       <p className='title-hobby-list'>\r\n         What's your hobby/hobbies?  \r\n       </p>\r\n      </div>\r\n\r\n      {/*this section will contain a list of cards:  */}\r\n      <div className='hobbies-list '>\r\n       {hobbiesListArr}\r\n      </div> \r\n \r\n      <DataConsumer>\r\n       { \r\n        (data) =>{\r\n         //console.log('choosed items by the user:\\n',data.selectedHobbies)  \r\n         return( \r\n          <div className='back-link '>\r\n\r\n           {/* render some messages to the user: */\r\n            data.selectedHobbies.length === 0 ? \r\n             <p \r\n              className='choose-item-msg'\r\n              style={{fontSize:'21px'}}>\r\n              You must choose an item\r\n             </p> :\r\n             (this.state.rendundantHobbies ? \r\n              <p\r\n               className='choose-item-msg'\r\n               style={{fontSize:'19px'}}>\r\n               Please choose distinct hobbies that you don't have yet\r\n              </p> :\r\n              <p></p>)\r\n           }\r\n\r\n   \r\n           <Button\r\n            className='save-user-data-btn'\r\n            onClick={() => {\r\n             \r\n             //selected hobbies(array of strings) \r\n             let hobbyNames = data.selectedHobbies.map(item =>{\r\n              return item.hobbyName;\r\n             });\r\n             \r\n             console.log(hobbyNames)\r\n\r\n             if(data.selectedHobbies.length === 0){\r\n              console.log('no item choosed')\r\n             }else{\r\n              if(this.checkRedundancyHobbies(hobbyNames)){\r\n               console.log('please choose distinct hobbies'); \r\n               this.setState({sentData: false});\r\n              }else{\r\n               //call this method to update the user message for hobbies redundancy \r\n               this.checkRedundancyHobbies(hobbyNames);\r\n               this.setState({sentData: true})\r\n               return this.sendHobbiesData(hobbyNames)\r\n              }\r\n             }\r\n            }}\r\n           >\r\n            Save data\r\n           </Button>\r\n           \r\n           {\r\n            //render a message after sending hobbies to the server:\r\n            this.state.sentData ? \r\n            <p \r\n             className='choose-item-msg'\r\n             style={{marginTop:'25px',fontSize:'19px'}}>\r\n              Data saved with success\r\n            </p> : \r\n            <p></p>\r\n           }\r\n\r\n           <div className='back'>\r\n            <Button \r\n             className='btn-style'\r\n             style={\r\n              {\r\n               marginTop:'35px',\r\n               cursor:'pointer'\r\n              }\r\n             }\r\n             onClick={() => this.props.changeRoute('home')}\r\n            >\r\n             Back to home\r\n            </Button> \r\n           </div>\r\n          </div>\r\n         )\r\n        }\r\n       }\r\n      </DataConsumer> \r\n     </div> \r\n    ) : <Home />\r\n   )   \r\n  }\r\n}\r\n\r\nexport default HobbiesList;\r\n","import React from 'react'\r\nimport {Button} from 'react-bootstrap'\r\nimport './fileUpload.css'\r\nimport axios from 'axios'\r\nimport firebase from '../../firebase.js'\r\n//import image for default profile picture:\r\n// import defaultPic from '../images/user-default-pic.png'\r\n\r\n//file upload component(for image input):\r\nclass FileUpload extends React.Component {\r\n constructor(props){\r\n  //inheritance data from Register class component: \r\n  super(props);\r\n  this.state={\r\n   file: '',\r\n   //default picture in case that user dont coose any profile picture:\r\n   uploadedFileName: '',\r\n   uploadedFilePath:'',\r\n   isSubmited: false,\r\n   correctInput: false   \r\n  }   \r\n } \r\n\r\n\r\n handleFile = (event) =>{\r\n  this.setState({file: event.target.files[0]});\r\n }\r\n\r\n //handle image upload\r\n handleUpload = () =>{ \r\n  let file = this.state.file;\r\n  let bucketName = 'images';\r\n  let storageRef = firebase.storage().ref(`${bucketName}/${file.name}`)\r\n  let uploadTask = storageRef.put(file);\r\n\r\n  uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED,() =>{\r\n   let downloadURL = uploadTask.snapshot.downloadURL \r\n  })\r\n\r\n  console.log('name of the file:\\n',file.name)\r\n }\r\n\r\n\r\n validateUserData = () =>{\r\n  //check if the one or many fields are empty: \r\n  const {userName, email, password, city} = this.props.userData;\r\n  if(!userName || !email || !password || !city){\r\n   return false;\r\n  }else{\r\n   this.setState({correctInput: true}) \r\n   return true \r\n  }  \r\n }\r\n\r\n\r\n uploadUserData = () =>{\r\n  const {userName, email, password, city} = this.props.userData; \r\n  fetch('https://fierce-shore-66137.herokuapp.com/register',{\r\n   method: 'post',\r\n   headers: {'Content-type':'application/json'},\r\n   body: JSON.stringify({\r\n    userName: userName,\r\n    email: email,\r\n    password: password,\r\n    city: city,\r\n    imageprofile: this.state.file.name\r\n   }) \r\n  })\r\n  .then((data) => data.json())\r\n  .catch(() => console.log('an error has occured!'))\r\n  \r\n  this.setState({isSubmited: true})\r\n }\r\n\r\n\r\n render(){\r\n  return(  \r\n   <div>\r\n    <div className='file-upload-container center-elem'>\r\n     <div className='input-and-label center-elem'>\r\n      <p className='picture-profile-label'>\r\n       Please choose your profile picture\r\n      </p> \r\n      <input \r\n       type='file' \r\n       className='file-input'\r\n       onChange = {event => this.handleFile(event)}\r\n      />\r\n     </div>\r\n     \r\n     <div className='submit-file'>\r\n      {/* this will upload the image for preview before create the account */}\r\n      <Button \r\n       className='upload-picture-btn'\r\n       //type='submit'\r\n       onClick={() => this.handleUpload()} \r\n      >\r\n       Upload picture \r\n      </Button>\r\n\r\n     </div>\r\n    </div>\r\n    {/* status image message */}\r\n    {\r\n      this.state.uploadedFileName ?\r\n      //render image or message for success: \r\n      (\r\n       <div>\r\n        <p style={{textAlign:'center'}}>\r\n         Image preview:\r\n        </p>\r\n        <div className='center-elem'>\r\n         <img\r\n          className='img-preview'\r\n          //image properly \r\n          src={this.state.uploadedFilePath} \r\n          alt={this.state.uploadedFileName}\r\n         />\r\n        </div>   \r\n       </div>  \r\n      ) : \r\n      (<div></div>)\r\n    }\r\n \r\n\r\n   <div className='btn-container'>\r\n     <Button \r\n      variant=\"primary\" \r\n      // type=\"submit\"\r\n      className='btn-style'\r\n      //this function below will sent the entire data to the server(main user data and his bobbies list(form different states-))\r\n      onClick={() => {\r\n       if(this.validateUserData() && this.props.userData.isPasswordComplex){\r\n        this.uploadUserData()\r\n        this.props.onChangeReg('login');\r\n       }else{\r\n        console.log('please complete all fields or check your password complexity')\r\n       }\r\n      }}\r\n     >\r\n      Submit\r\n    </Button>  \r\n   </div>\r\n\r\n   {\r\n     !this.state.correctInput ? \r\n      (<p style={\r\n        {\r\n         textAlign: 'center',\r\n         color:'#FE6B8B',\r\n         marginTop:'8px'\r\n        }\r\n       }\r\n      >\r\n       Please complete all fields before submit!\r\n      </p>): //otherwise\r\n     this.props.userData.isPasswordComplex ?  \r\n     (<div> \r\n       <p></p>\r\n     </div>) : //otherwise\r\n     (<div> \r\n       <p style={\r\n        {\r\n         textAlign: 'center',\r\n         color:'#FF8E53'\r\n        }\r\n       }>\r\n        Please check your credentials!\r\n       </p>\r\n      </div>)  \r\n   }\r\n   </div>   \r\n  )\r\n }   \r\n}\r\n\r\nexport default FileUpload;","import React from 'react'\r\nimport {Form} from 'react-bootstrap'\r\nimport registerLogo from '../images/register-logo.png'\r\nimport './register.css'\r\nimport Footer from '../Footer/Footer.js'\r\nimport {DataConsumer} from '../context/context.js'\r\nimport FileUpload from '../file upload/FileUpload.js'\r\nimport Login from '../Login/Login.js'\r\n\r\n\r\nclass Register extends React.Component{\r\n  constructor(props){\r\n   super(props);\r\n   this.state = {\r\n    regPath:'register',\r\n    userName: '',\r\n    email: '',\r\n    password: '',\r\n    city: '',\r\n    isPasswordComplex: false\r\n   }   \r\n  } \r\n \r\n //this method handle the path change: \r\n onChangeReg = (path) =>{\r\n  this.setState({regPath: path});\r\n }\r\n \r\n //this method handle the user full name:\r\n handleName = (event) =>{\r\n  this.setState({userName: event.target.value});\r\n }\r\n\r\n handleEmail = (event) =>{\r\n  this.setState({email: event.target.value});\r\n }\r\n\r\n handlePassword = (event) =>{\r\n  this.setState({password: event.target.value});\r\n  if(event.target.value.length >= 8){\r\n   this.setState({isPasswordComplex: true}); \r\n  }else{\r\n   this.setState({isPasswordComplex:false}) \r\n  }\r\n }\r\n\r\n handleCity = (event) =>{\r\n  this.setState({city: event.target.value});\r\n }\r\n\r\n\r\n  render = () =>{\r\n   if(this.state.regPath === 'register'){\r\n    return(\r\n     <div>\r\n        <DataConsumer>\r\n         {\r\n           (value) =>{\r\n            return(\r\n             <div className='main-container'>\r\n              <div className='login-container'>\r\n              {/*Title + logo section:  */}\r\n              <div className='title-container'>\r\n               {/*Top container includes logo + title section: */}\r\n               <div className='top-container'>\r\n                <div className='logo-container'>\r\n                 <img \r\n                   className='user-logo'\r\n                   src={registerLogo}\r\n                   alt=\"user-logo\"\r\n                 />\r\n                </div>\r\n                <div className='title-page'>\r\n                 {/*Divide the title in two different colors:*/}\r\n                 <p className='page-title'>\r\n                  <span className='second-half-title'>\r\n                   Register\r\n                  </span>\r\n                 </p>   \r\n                </div>   \r\n               </div>\r\n              </div> \r\n         \r\n               {/* message section */}\r\n               <div className='follow-message-section'>\r\n                <p className='follow-message'>\r\n                 Create your user account\r\n                </p>   \r\n               </div>\r\n              \r\n               {/* for signin form section(labels+input fields) use REact bootstrap or materialUi */}\r\n               {/*Credentials section container:  */}\r\n               <div className='credentials-section-container'>  \r\n                <Form className ='form-container'>\r\n                 {/*username field */}\r\n                 <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>\r\n                   Full name\r\n                  </Form.Label>\r\n                  {/*password input textfield: */} \r\n                  <Form.Control \r\n                   type=\"text\" \r\n                   placeholder=\"Username\" \r\n                   onChange={this.handleName}\r\n                  />\r\n                 </Form.Group>\r\n         \r\n                 {/*email field */}\r\n                 <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>\r\n                   Email address\r\n                  </Form.Label>\r\n                  {/* email input textfield: */}\r\n                  <Form.Control \r\n                   type=\"email\"\r\n                   placeholder=\"Enter email\"\r\n                   onChange={this.handleEmail} \r\n                   />\r\n                  <Form.Text className=\"text-muted\">\r\n                   We'll never share your email with anyone else.\r\n                  </Form.Text>\r\n                 </Form.Group>\r\n                 \r\n                 {/*password field */}\r\n                 <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>\r\n                   Password\r\n                  </Form.Label>\r\n                  {/*password input textfield: */} \r\n                  <Form.Control \r\n                   type=\"password\" \r\n                   placeholder=\"Password\" \r\n                   onChange={this.handlePassword}\r\n                  />\r\n                 </Form.Group>\r\n                 \r\n                 {\r\n                   //render a message password here in case if it's not complex:\r\n                   !this.state.isPasswordComplex ? \r\n                   (<p style={\r\n                     {color: '#FE6B8B',\r\n                      fontSize: '13px',\r\n                      textAlign: 'center'\r\n                     }\r\n                    }>\r\n                     Your password must have more than 8 characters!\r\n                    </p>) :\r\n                   (<p style={\r\n                     {color: '#FE6B8B',\r\n                      fontSize: '13px',\r\n                      textAlign: 'center'\r\n                     }}>\r\n                     Your password is ok\r\n                    </p>)\r\n                 }\r\n              \r\n         \r\n                 {/*city field */}\r\n                 <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>\r\n                   City\r\n                  </Form.Label>\r\n                  {/*password input textfield: */} \r\n                  <Form.Control \r\n                   type=\"text\" \r\n                   placeholder=\"City\" \r\n                   onChange={this.handleCity}\r\n                  />\r\n                 </Form.Group>\r\n                 \r\n\r\n                 {/*image upload component: */}\r\n                 {/* pass register user data to FileUpload component\r\n                 for send to the server */}\r\n                 <FileUpload \r\n                  userData={this.state}\r\n                  onChangeReg={this.onChangeReg} \r\n                 />\r\n        \r\n\r\n                </Form> \r\n               </div>\r\n               {/* close login-container class */}\r\n              </div>\r\n              {/* footer component */}\r\n              <Footer className='footer-component'/>\r\n             {/* close main-container class */} \r\n             </div> \r\n            ) \r\n           }\r\n         } \r\n        </DataConsumer>\r\n     </div>  \r\n    )\r\n   }else if(this.state.regPath === 'login'){\r\n    return <Login \r\n            passUser = {this.props.passUser}\r\n            routeChange = {this.props.routeChange}\r\n           />\r\n   } \r\n\r\n  }\r\n}\r\n\r\nexport default Register;","import React from 'react'\r\nimport Home from '../../Home.js'\r\nimport {Button} from 'react-bootstrap'\r\nimport './editProfile.css';\r\nimport Login from '../Login/Login.js'\r\nimport Register from '../Register/Register.js'\r\nimport {Form} from 'react-bootstrap'\r\nimport firebase from '../../firebase.js'\r\nimport userDefaultPic from './user-default-pic.png'\r\n\r\n\r\nclass EditProfile extends React.Component{\r\n  constructor(props){\r\n   super(props)\r\n   this.state={\r\n    currentPath: 'edit-profile',\r\n    currentUserHobbies: {\r\n      userArrHobby:[] //this array is empty before componentDidMount() method call\r\n    },\r\n    newUserName: this.props.passUserData.username,\r\n    newCity: this.props.passUserData.city,\r\n    imageSource: userDefaultPic //default user picture\r\n   }\r\n  } \r\n\r\n  componentDidMount(){\r\n   fetch('https://fierce-shore-66137.herokuapp.com/getUsersData')\r\n   .then(res => res.json())\r\n   .then(data =>{\r\n     this.getCurrentUserHobbies(data.usersHobbies)\r\n    }\r\n   )\r\n   this.setProfilePicture();\r\n  }\r\n\r\n  setProfilePicture = () =>{\r\n   let storageRef = firebase.storage().ref()\r\n   let spaceRef = storageRef.child('images/' + this.props.passUserData.imageprofile)\r\n   storageRef\r\n    .child('images/' + this.props.passUserData.imageprofile)\r\n    .getDownloadURL()\r\n    .then(url =>{\r\n     console.log('image url:\\n',url)\r\n     this.setState({imageSource: url}) \r\n    }) \r\n  }\r\n\r\n  routeChange = (path) =>{\r\n   this.setState({currentPath: path})   \r\n  }\r\n \r\n  //implement in this component a method that extract hobbies array for the current user:\r\n  getCurrentUserHobbies = (array) =>{\r\n    for(let i=0;i<array.length;i++){    \r\n     if(array[i].user_id === this.props.userId){\r\n      this.setState({currentUserHobbies: array[i]});\r\n      break;\r\n     }else{\r\n      this.setState({currentUserHobbies:[]}) \r\n     } \r\n    }\r\n  }\r\n\r\n\r\n  //method that delete an user by his id and email:\r\n  deleteUserData = () =>{\r\n   fetch('https://fierce-shore-66137.herokuapp.com/delete-user',{\r\n    method:'delete',\r\n    headers:{'Content-type':'application/json'},\r\n    //additional data for delete request:\r\n    body: JSON.stringify({\r\n     givenUserId: this.props.userId,\r\n     givenUserEmail: this.props.passUserData.email \r\n    })\r\n   })\r\n   .then(res => res.json())\r\n   .then(data => console.log(data)) \r\n  }\r\n\r\n  \r\n  //grab data from textfield:\r\n  onChangeNewName = (event) =>{\r\n   this.setState({newUserName: event.target.value});\r\n  }\r\n\r\n  onChangeNewCity = (event) =>{\r\n   this.setState({newCity: event.target.value});\r\n  }\r\n\r\n\r\n  //method that change username:(must change from POST to PUT methods types later on-> tomorrow)\r\n  changeUserName = () =>{\r\n   //send to the server user id and new username\r\n   fetch('https://fierce-shore-66137.herokuapp.com/change-user-name',{\r\n    method:'put',//change to PUT type\r\n    headers:{'Content-type':'application/json'},\r\n    body: JSON.stringify({\r\n     userId: this.props.userId, \r\n     newName: this.state.newUserName\r\n    }) \r\n   })\r\n   .then(res => res.json())\r\n   .then(data => console.log(data))\r\n  }\r\n\r\n  //method that change city:\r\n  changeUserCity = () =>{\r\n   //send to the server user id and new city\r\n   fetch('https://fierce-shore-66137.herokuapp.com/change-user-city',{\r\n    method:'put',\r\n    headers:{'Content-type':'application/json'},\r\n    body: JSON.stringify({\r\n     userId: this.props.userId,\r\n     newCity: this.state.newCity \r\n    }) \r\n   })\r\n   .then(res => res.json())\r\n   .then(data => console.log(data))\r\n  }\r\n\r\n  render(){\r\n   return(\r\n    this.state.currentPath === 'edit-profile' ?\r\n    //edit profile page structure:\r\n    (<div>\r\n      {/* title of page: */}\r\n      <div className='edit-profile-title-section'>\r\n       <p className='edit-profile-title'>\r\n        Your account\r\n       </p> \r\n      </div>\r\n\r\n      {/* user card: contain profile picture, details and below setting section that modify details of their account: */}\r\n      <div className='user-data-card-container'>\r\n       <div className='main-user-data-container'>\r\n        <h4 className='user-data-card-title'>\r\n          Personal information \r\n        </h4> \r\n        <div className='user-data-card'>\r\n         <div className='imgprf-container center-elem'>\r\n          <img\r\n           className='user-profile-image' \r\n           src={this.state.imageSource}\r\n           alt='user-profile'\r\n          />\r\n         </div> \r\n         <div className='usr-data-section center-elem'>\r\n          {/* define a list here of main details: username,city,etc. */}\r\n          <ul className='main-user-data-list '>\r\n           <li>\r\n            {/* name here: */}\r\n            <p className='user-data-label'>\r\n             Username:\r\n            </p>\r\n            <p className='usr-data-text'>\r\n             {this.props.passUserData.username}\r\n            </p> \r\n           </li>\r\n\r\n           <li>\r\n            <p className='user-data-label'>\r\n             Email:\r\n            </p> \r\n            <p className='usr-data-text'>\r\n             {this.props.passUserData.email}\r\n            </p>  \r\n           </li>\r\n\r\n           <li>\r\n            <p className='user-data-label'>\r\n             City: \r\n            </p>\r\n            <p className='usr-data-text'>\r\n             {this.props.passUserData.city}\r\n            </p> \r\n           </li>\r\n\r\n          </ul>\r\n         </div> \r\n        </div>\r\n      \r\n        {/* user hobbies list: */}\r\n        <div className='user-hobbies-details'>\r\n         <p className='user-hobbies-label'>\r\n          Your selected hobbies:\r\n         </p> \r\n         <div className='user-hobbies-list-items'>\r\n          { \r\n           this.state.currentUserHobbies.userArrHobby !== undefined ?\r\n           (\r\n            this.state.currentUserHobbies.userArrHobby.map((item,index) =>{\r\n              return <p key={index}\r\n                       className='user-hobby-list-item'\r\n                     >\r\n                      {item}\r\n                     </p> \r\n              })\r\n           ) : //otherwise if there's not hobbies\r\n           (<p style={\r\n            {\r\n             fontSize:'15px',\r\n             textAlign:'center'\r\n            }\r\n           }>\r\n             You don't have any hobby yet\r\n            </p>)\r\n          }\r\n         </div> \r\n        </div>\r\n\r\n       </div>\r\n      </div>\r\n\r\n      {/* user account settings section: */}\r\n      <div className='account-settings-container main-user-data-container'>\r\n       {/* change username,city, delete hobbies */}\r\n       <h4 className='user-data-card-title'>\r\n        Account settings \r\n       </h4>\r\n       <Form >\r\n        <div className='settings-container'>\r\n\r\n         <Form.Group className='change-data'>\r\n          <Form.Label className='setting-label'>\r\n           Change your username:\r\n          </Form.Label>\r\n          <div className='center-comp'>\r\n           <Form.Control\r\n            className='change-name-field'\r\n            type='text'\r\n            onChange={(event) => this.onChangeNewName(event)}\r\n           />\r\n          </div>\r\n         </Form.Group>\r\n\r\n         <Form.Group className='change-data'>\r\n          <Form.Label className='setting-label'>\r\n           Change your city:\r\n          </Form.Label>\r\n          <div className='center-comp'>\r\n            <Form.Control\r\n             className='change-name-field'\r\n             type='text'\r\n             onChange={(event) => this.onChangeNewCity(event)}\r\n            />\r\n          </div>\r\n         </Form.Group>\r\n           \r\n         <div className='changes-msg-container'>\r\n          <p className='changes-msg'>\r\n           After your changes reconnect to your account to see the result\r\n          </p>\r\n         </div>\r\n\r\n         {/* button for save setting: */}\r\n         <div className='center-comp'>\r\n          <Button\r\n           className='save-account-setting btn-style'\r\n           //onclick -> call changeUserName and changeUserCity methods  \r\n           onClick={()=>{\r\n             this.changeUserName();\r\n             this.changeUserCity();\r\n            }\r\n           }\r\n          >\r\n           Save changes   \r\n          </Button>\r\n         </div>\r\n          \r\n         {/* delete account section: */}\r\n         <div className='delete-account'>\r\n          <label className='delete-account-label'>\r\n           Delete account \r\n          </label>\r\n          <div className='delete-section'>\r\n           <p className='warning-message'>\r\n            Are you sure you want to delete your account?\r\n           </p>\r\n           <p className='warning-message'>\r\n            All data will be lost.\r\n           </p>\r\n           <Button \r\n            className='delete-account-btn'\r\n            onClick={() => {\r\n             this.routeChange('login');\r\n             //call here a method that create an request that delete data from database:\r\n             this.deleteUserData();\r\n\r\n            }}\r\n           >\r\n            Delete \r\n           </Button>\r\n          </div>\r\n         </div>\r\n\r\n        </div>\r\n       </Form>\r\n      </div>\r\n\r\n      <Button\r\n       className='btn-style back-btn-home'\r\n       onClick={() => this.routeChange('home')}\r\n      >\r\n       Back to home\r\n      </Button> \r\n    </div>) : //otherwise render that\r\n    this.state.currentPath === 'home' ?\r\n    (<Home\r\n      routeChange={this.routeChange}\r\n      userdata={this.props.passUserData}\r\n     />) : //otherwise render that\r\n    this.state.currentPath === 'login' ? \r\n    (<Login\r\n      routeChange={this.routeChange}\r\n      passUser={this.props.passUser}\r\n     />) : \r\n    <Register\r\n      routeChange={this.routeChange}\r\n      passUser={this.props.passUser}\r\n    />\r\n   )  \r\n  }\r\n\r\n}\r\n\r\nexport default EditProfile;","import React from 'react';\nimport pageLogo from './components/images/logo.png'\nimport GameImage from './components/images/game-image.jpg'\nimport HobbyImg from './components/images/hobby-img.png'\nimport './Home.css';\nimport Footer from './components/Footer/Footer.js'\nimport {Carousel} from 'react-bootstrap'\nimport photoHobby from './components/images/photo-hobby.jpg'\nimport tennishobby from './components/images/tennis-hobby.jpg'\nimport guitarHobby from './components/images/guitar-hobby.jpg'\nimport MatchesList from './components/Matches list/MatchesList.js'\nimport {Nav, Navbar} from 'react-bootstrap'\nimport Navigation from './components/Navbar/Navigation.js'\nimport HobbiesList from './components/Hobbies List/HobbiesList.js'\nimport EditProfile from './components/Edit Profile/EditProfile.js'\n\n\nclass App extends React.Component {\n  \n  constructor(props){\n   super(props)\n   this.state={\n    currentPage: 'home',\n    userId: '',\n    username:''\n   }\n  }\n\n  changeRoute = (path) =>{\n   this.setState({currentPage: path}) \n  }\n  \n  //lifecycle React method (is called when the component is \"called\"):\n  componentDidMount(){\n   this.setState({userId: this.props.userdata.user_id}) \n  }\n\n  render(){ \n      return (\n        // Render the home page:\n        <div className=\"App main-container\">\n        { \n         this.state.currentPage === 'home' ?\n         (\n         <div>  \n          {/* Page Logo + Title */}\n          <div className='logo-container'>\n           <div className='logo'>\n            <img className='page-logo'\n                 src={pageLogo}\n                 alt='page logo'\n            />\n           </div>\n           <div className='title'>\n            <p className='title-text'>\n             <span className='first-half'>\n             Hobby\n             </span>\n             <span className='second-half'>\n              Explorator\n             </span>\n            </p> \n           </div>\n          </div>\n     \n          <div className='title-page-container'>\n            {/*username message must be dynamic using a template string, and the name comes from the server(do this later)  */}\n            <h1 className='title-page'> \n             Welcome \n             <span className='title-page-username'>\n              {`${this.props.userdata.username}`}\n             </span>!\n            </h1> \n          </div>\n          \n\n          {/* navigation container: */}\n          <div className='navbar-container'>\n           <Navbar variant=\"dark\">\n            <Nav className=\"mr-auto\">\n\n              <Nav.Link \n               className='nav-link'\n               onClick={() => this.changeRoute('hobbies-list')}\n              >\n                <p className='nav-link-text'>\n                 Add hobbies\n                </p>\n              </Nav.Link>\n\n              <Nav.Link \n               className='nav-link'\n               onClick={() => this.changeRoute('edit-profile')}\n              >\n                <p className='nav-link-text'>\n                 Account\n                </p>\n              </Nav.Link>\n\n              <Nav.Link \n               className='nav-link'\n               onClick={() => this.changeRoute('matches-list')}\n              >\n               <p className='nav-link-text'>\n                 Matches list\n               </p>\n              </Nav.Link>\n\n              <Nav.Link \n               className='nav-link'\n               href=\"login\"\n               type=\"submit\"\n               //onClick={() => this.props.routeChange('login')}\n              >\n               <a \n                href='https://mihai-vatulescu13.github.io/Hobby-Explorator-Client/'\n                className='nav-link-text'\n                >\n                 Sign out\n               </a>\n              </Nav.Link>\n\n            </Nav>\n           </Navbar>\n          </div>\n\n\n          {/* picture section */}\n          {/* replace this section with a slide images section:*/}\n\n          <div className='picture'>\n            <Carousel className='carousel-container'>\n              <Carousel.Item className='carousel-item'>\n                <img\n                  className=\"d-block  slide-img-prop\"\n                  src={GameImage}\n                  alt=\"First slide\"\n                />\n                <Carousel.Caption className='carousel-caption'>\n                  <h3>Play video games</h3>\n                </Carousel.Caption>\n              </Carousel.Item>\n\n              <Carousel.Item className='carousel-item'>\n                <img\n                  className=\"d-block  slide-img-prop\"\n                  src={photoHobby}\n                  alt=\"Second slide\"\n                />\n                <Carousel.Caption className='carousel-caption'>\n                  <h3>Take photos</h3>\n                </Carousel.Caption>\n              </Carousel.Item>\n\n              <Carousel.Item className='carousel-item'>\n                <img\n                  className=\"d-block  slide-img-prop\"\n                  src={tennishobby}\n                  alt=\"Third slide\"\n                />\n                <Carousel.Caption className='carousel-caption'>\n                  <h3>Play tennis/sports</h3>\n                </Carousel.Caption>\n              </Carousel.Item>\n\n              <Carousel.Item className='carousel-item'>\n                <img\n                  className=\"d-block  slide-img-prop\"\n                  src={guitarHobby}\n                  alt=\"Fourth slide\"\n                />\n                <Carousel.Caption className='carousel-caption'>\n                  <h3>Play music</h3>\n                </Carousel.Caption>\n              </Carousel.Item>\n\n            </Carousel>\n          </div>\n          \n\n          {/* first description section: */}\n          <div className='page-desc center-elem'>\n            <div className='desc-container'>\n              <div className='desctext'>\n               <p className='page-desc-text'>\n                Discover more people with same hobby and interact with them! \n               </p> \n              </div>\n\n              <div className='image-and-text'>\n                <div className='descimg '>\n                 <img className='hobby-img'\n                  src={HobbyImg}\n                  alt='hobby img'\n                 /> \n                </div>\n                <div className='page-description'>\n                 <p className='description-text'>\n                   Do you have a hobby to play or do something you like and you can't do that because you're get bored by doing on your own? \n                 </p>\n                 <p className='description-text'>\n                  This platform is for you! In this platform you can find other people with the same hobby/passion like you have and you can interact with them in real life to do what are passionate you.\n                 </p>\n                </div>\n              </div>  \n            </div>  \n          </div>\n          \n         </div>) : //\"otherwise return this below:\"\n         \n          this.state.currentPage === 'matches-list' ?\n          (<MatchesList \n            changeRoute = {this.changeRoute}\n            userId = {this.state.userId}\n           />) : //otherwise:\n          this.state.currentPage === 'edit-profile' ?\n          (<EditProfile\n            changeRoute={this.changeRoute}\n            passUserData={this.props.userdata}\n            userId = {this.state.userId}\n            passUser={this.props.passUser}\n           />) : //otherwise:\n          (<HobbiesList \n            changeRoute={this.changeRoute}\n            userId = {this.state.userId}\n           />)\n        \n        } \n\n        {/* footer will be a react component and will be rendered for home page: */\n         this.state.currentPage === 'home' ?\n         <Footer/> : <div></div>\n        }\n        \n        </div>\n      );  \n  }\n}\n\nexport default App;\n","import React from 'react'\r\nimport Login from './components/Login/Login.js'\r\nimport Home from './Home.js'\r\nimport Register from './components/Register/Register.js'\r\n\r\n\r\nclass RoutingPage extends React.Component{\r\n  constructor(){\r\n   super() \r\n   this.state={\r\n    path: 'login',\r\n    userData:{\r\n     user_id: '',\r\n     username: '',\r\n     email: '',\r\n     city: '',\r\n     joined: '',\r\n     imageprofile: '' \r\n    }\r\n   }\r\n  }\r\n  \r\n  //routeChange method is common for Login and Home component\r\n  routeChange = (route) =>{\r\n   this.setState({path: route})\r\n  }\r\n \r\n\r\n  passUser = (data) =>{\r\n    this.setState({\r\n     userData:{\r\n      user_id: data.user_id,\r\n      username: data.username,\r\n      email: data.email,\r\n      city: data.city,\r\n      joined: data.joined,\r\n      imageprofile: data.imageprofile\r\n     } \r\n    })\r\n  }\r\n\r\n\r\n  render = () =>{\r\n   return (\r\n    <div>\r\n      {/* render a component by the current state path: */}\r\n      {\r\n        this.state.path === 'home' ?\r\n        <Home \r\n         routeChange={this.routeChange}\r\n         userdata={this.state.userData}\r\n         passUser={this.passUser}\r\n        /> : \r\n        (\r\n         this.state.path === 'login' ?\r\n         (<Login \r\n          routeChange={this.routeChange}\r\n          passUser={this.passUser}\r\n         />) :\r\n         (<Register\r\n          routeChange={this.routeChange} \r\n          passUser={this.passUser}\r\n         />)\r\n        )          \r\n      }\r\n    </div>   \r\n   )   \r\n  }\r\n}\r\n\r\nexport default RoutingPage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport RoutingPage from './RoutingPage.js'\nimport {DataProvider} from './components/context/context.js'\n\nReactDOM.render(\n    <DataProvider>\n      <RoutingPage/> \n    </DataProvider> ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}